const SoundPlayer = require("../sound-player"); 
const SoundPlayerConsumer = require("../sound-player-consumer");

jest.mock("../sound-player");  // Create mock

beforeEach (()  =>  { 
  // Clear all instances 
  SoundPlayer.mockClear(); 
});

it ( "We can check if the consumer called the class constructor " ,  ()  =>  { 
  const soundPlayerConsumer = new SoundPlayerConsumer(); 
  expect(SoundPlayer).toHaveBeenCalledTimes(1); 
});

it ( "We Can Check If The Consumer Called A Method On The Class Instance " ,  ()  =>  { 
  expect.assertions(5); 
  // MockClear () for that is functioning, it can be confirmed that it is not still function execution 
  expect(SoundPlayer).not.toHaveBeenCalled();

  const soundPlayerConsumer = new SoundPlayerConsumer(); 
  // constructor is called again 
  expect(SoundPlayer).toHaveBeenCalledTimes(1);

  const coolSoundFileName  = "song.mp3"; 
  soundPlayerConsumer.playSomethingCool();

  const mockSoundPlayerInstance = SoundPlayer.mock.instances[0]; 
  const mockPlaySoundFile = mockSoundPlayerInstance.playSoundFile; 
  expect(mockPlaySoundFile.mock.calls[0][0]).toEqual(coolSoundFileName); 
  // ï¿ª the same content 
  expect(mockPlaySoundFile).toHaveBeenCalledWith(coolSoundFileName); 
  expect(mockPlaySoundFile).toHaveBeenCalledTimes(1); 
});